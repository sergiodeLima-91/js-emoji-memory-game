body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #fc1e8a;
    /* Para impedir que o usuário selecione os emojis para copiar e saber quais os pares (trapacear) */
    user-select: none;
}

.container {
    position: relative; /*"Relative" Para manipulação mais fácil*/
    display: flex; 
    flex-direction: column; /* Um elemento abaixo do outro. */
    align-items: center;
    gap: 30px;
    /*Colorindo o container*/
    background: linear-gradient(325deg,
    #03001e 0%, 
    #7303c0 30%,
    #ec38bc 70%, 
    #fdeff9 100%); /* Gerar cor com degradê. As cores em gradiente podem ser geradas com o https://cssgradient.io/ */
    padding: 40px 60px; /* Para descolar o título JOGO DA MEMÓRIA das margens do container. */
}

h2 {
    font-size: 2em; /* unidade de medida de fonte escalável. */
    color: #fff;
    text-transform: uppercase; /* Para sempre obrigar o texto a estar em caixa alta */
    letter-spacing: 0.1em; /* Espaçamento entre as letras */
}

/* Personalizando o Botão */
.reset{
    padding: 15px 20px;
    width: 100%; /* Para preencher toda a div onde se encontra */
    color: rgb(37, 1, 79);;
    background-color: #fff;
    border: none; /* Retirar bordas */
    border-radius: 5px;
    font-size: 1.0em; /* Pequeno aumento no texto */
    letter-spacing: 0.1em;
    text-transform: uppercase;
    cursor: pointer; /* Quando cursor passar por cima do botão, indicar que ele é clicável. */
    font-weight: 600; /* Dar peso para a fonte para ficar puxado para negrito */
}

/* Mudança do botão quando ele é clicado */
.reset:focus {
    color: #ec38bc;
    background-color: #262809;  
}

/* Alterando a div GAME */
.game {
    /* Gerando um quadrado */
    width: 430px;
    height: 430px;
    /* Sempre que um elemento ultrapassar a linha, deve ir para a próxima */
    display: flex;
    flex-wrap: wrap;
    /* Espaçar elementos */
    gap: 10px;
    /* Dar efeito 3D nas animações */
    transform-style: preserve-3d; /* Preserve o efeito 3D! */
    perspective: 500px;
}

/* Trabalhando com os CARDS (itens) */
.item {
    position: relative;
    width: 100px;
    height: 100px;
    display: flex;
    align-items: center;
    border-radius: 10px;
    justify-content: center;
    background-color: #fff;
    /* Aumentando tamanho dos EMOJIS */
    font-size: 3em; 
    /* Conferindo animação de rotação aos cards */
    transform: rotateY(180deg); /* Rotação no eixo Y */
    /* Tempo da transição */
    transition: 0.25s;
}

 /* Criando uma cobertura para esconder as imagens (já que o usuário não pode ver). O professor o chamou de pseudo-elemento */
    /* Cria conteúdo DEPOIS (after) da classe "item" */
 .item::after { 
    /* conteúdo vazio */
    content: ""; 
    position: absolute;
    /* Para setar no ponto zero a fim de cobrir totalmente o elemento */
    inset: 0;
    background-image: url('../images/hunter-titanium.jpg');
    background-size: cover;
    background-repeat: no-repeat;
    background-position: -35px;
    /* background: rgb(37, 1, 79); */
    border-radius: 10px;
    transition: 0.25s;
    transform: rotateY(0deg);
    /* Para o pseudo-elemento não somente sobrepor, mas também ESCONDER o backface (o elemento de trás),*/
    backface-visibility: hidden;
 }

/* Girando a carta quando ela é clicada */
 .item.boxOpen { /* Mantem o pseudo-elemento sem movimento */
    transform: rotateY(0deg);
 }

 .boxOpen::after,
 .boxMatch::after { /* Vira em 180 graus a parte que está atrás do pseudo-elemento */
    transform: rotateY(180deg);
 }